# coding=utf-8
from uuid import UUID
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy_sugar import select, delete
from models import *

class BaseService(object):
    """基础类"""
    def __init__(self, db: AsyncSession, mod_class: Base):
        self.db = db
        self.mod = mod_class

    async def byId(self, uid:str):
        return await self.db.get(self.mod, uid)
{% for classwrapper in mod.classes %}
class {{classwrapper.class_name}}Service(BaseService):
    """{{classwrapper.class_name}}'s Service class"""
    def __init__(self, db: AsyncSession):
        super().__init__(db, {{classwrapper.class_name}})

    {% for fieldwrapper in classwrapper.fields %}{% if fieldwrapper.is_complex %}async def by{{ fieldwrapper.name.capitalize() }}(self, {{ fieldwrapper.name }}_id):
        return list(select({{classwrapper.class_name}}).where({{classwrapper.class_name}}.{{ fieldwrapper.name }}_id == {{ fieldwrapper.name }}_id).scalars(self.db))

    {% endif %}{% endfor %}
{% endfor %}